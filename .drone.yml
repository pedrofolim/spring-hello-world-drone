---
kind: pipeline
type: kubernetes
name: spring-hell-world-drone

steps:
 - name: restore-cache
   image: meltwater/drone-cache:dev
   environment:
     AWS_ACCESS_KEY_ID:
       from_secret: aws_access_key_id
     AWS_SECRET_ACCESS_KEY:
       from_secret: aws_secret_access_key
   pull: true
   settings:
     restore: true
     bucket: voyager/maven-cache
     path-style: true
     region: none
     mount:
        - '/root/.m2'
  image: maven:3-jdk-8
  commands:
  - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
- name: test
  image: maven:3-jdk-8
  commands:
  - mvn test -B
  - ls -a
  - echo "ROOT"
  - ls -a /root
- name: rebuild-cache
  image: meltwater/drone-cache:dev
  pull: true
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_access_key_id
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret_access_key
  settings:
    rebuild: true
    endpoint: http://minio.default.svc:9000
    bucket: voyager/maven-cache
    path-style: true
    region: none
    mount:
        - '/root/.m2'
- name: code-analysis
  image: aosapps/drone-sonar-plugin
  environment:
    sonar_host:
      from_secret: sonar_host
    sonar_token:
      from_secret: sonar_token
  commands:
    - sonar-scanner -Dsonar.projectKey=${DRONE_REPO}
      -Dsonar.projectName=${DRONE_REPO}
      -Dsonar.host.url=$sonar_host
      -Dsonar.login=$sonar_token
      -Dsonar.tests=src/test/java
      -Dsonar.sources=src/main/java
      -Dsonar.java.libraries=./target/classes
      -Dsonar.java.binaries=./target/classes
